apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ocs.daggersample"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '28.0.2'
}

dependencies { configuration ->
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidX(configuration)
    dagger(configuration)
    androidTest(configuration)
    compileOnly 'javax.annotation:jsr250-api:1.0'
    retrofit(configuration)
    rxJava(configuration)
}

private static void androidX(configuration) {
    configuration.implementation 'androidx.appcompat:appcompat:1.0.0-rc01'
    configuration.implementation 'androidx.constraintlayout:constraintlayout:1.1.2'

}

private static void androidTest(configuration) {
    configuration.androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    configuration.androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}

private static void dagger(configuration) {
    def dagger2_version = '2.14.1'
    configuration.implementation "com.google.dagger:dagger:$dagger2_version"
    configuration.implementation "com.google.dagger:dagger-android:$dagger2_version"
    configuration.implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    configuration.kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    configuration.kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
    configuration.annotationProcessor "com.google.dagger:dagger-compiler:$dagger2_version"
    configuration.implementation 'javax.inject:javax.inject:1'
}

private static void retrofit(configuration) {
    def retrofit_version = '2.3.0'
    configuration.implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    configuration.implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    configuration.implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

}

private static void rxJava(configuration) {
    def rxjava2_version = '2.1.8'
    def rxandroid_version = '2.0.1'
    configuration.implementation "io.reactivex.rxjava2:rxjava:$rxjava2_version"
    configuration.implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
}

kapt {
    generateStubs = true
}
